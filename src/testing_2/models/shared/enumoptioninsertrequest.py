"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from testing_2 import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)

@dataclasses.dataclass
class EnumOptionInsertRequest:
    enum_option: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('enum_option') }})
    r"""The gid of the enum option to relocate."""
    after_enum_option: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('after_enum_option'), 'exclude': lambda f: f is None }})
    r"""An existing enum option within this custom field after which the new enum option should be inserted. Cannot be provided together with before_enum_option."""
    before_enum_option: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('before_enum_option'), 'exclude': lambda f: f is None }})
    r"""An existing enum option within this custom field before which the new enum option should be inserted. Cannot be provided together with after_enum_option."""
    


"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from testing_2 import utils
from typing import Optional

class TagRequestColor(str, Enum):
    r"""Color of the tag."""
    DARK_PINK = 'dark-pink'
    DARK_GREEN = 'dark-green'
    DARK_BLUE = 'dark-blue'
    DARK_RED = 'dark-red'
    DARK_TEAL = 'dark-teal'
    DARK_BROWN = 'dark-brown'
    DARK_ORANGE = 'dark-orange'
    DARK_PURPLE = 'dark-purple'
    DARK_WARM_GRAY = 'dark-warm-gray'
    LIGHT_PINK = 'light-pink'
    LIGHT_GREEN = 'light-green'
    LIGHT_BLUE = 'light-blue'
    LIGHT_RED = 'light-red'
    LIGHT_TEAL = 'light-teal'
    LIGHT_BROWN = 'light-brown'
    LIGHT_ORANGE = 'light-orange'
    LIGHT_PURPLE = 'light-purple'
    LIGHT_WARM_GRAY = 'light-warm-gray'


@dataclass_json(undefined=Undefined.EXCLUDE)

@dataclasses.dataclass
class TagRequestInput:
    r"""A *tag* is a label that can be attached to any task in Asana. It exists in a single workspace or organization."""
    color: Optional[TagRequestColor] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('color'), 'exclude': lambda f: f is None }})
    r"""Color of the tag."""
    followers: Optional[list[str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('followers'), 'exclude': lambda f: f is None }})
    r"""An array of strings identifying users. These can either be the string \\"me\\", an email, or the gid of a user."""
    name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('name'), 'exclude': lambda f: f is None }})
    r"""Name of the tag. This is generally a short sentence fragment that fits on a line in the UI for maximum readability. However, it can be longer."""
    notes: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('notes'), 'exclude': lambda f: f is None }})
    r"""Free-form textual information associated with the tag (i.e. its description)."""
    workspace: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('workspace'), 'exclude': lambda f: f is None }})
    r"""Gid of an object."""
    


"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from testing_2 import utils
from typing import Optional

class TeamRequestVisibility(str, Enum):
    r"""The visibility of the team to users in the same organization"""
    SECRET = 'secret'
    REQUEST_TO_JOIN = 'request_to_join'
    PUBLIC = 'public'


@dataclass_json(undefined=Undefined.EXCLUDE)

@dataclasses.dataclass
class TeamRequestInput:
    r"""A *team* is used to group related projects and people together within an organization. Each project in an organization is associated with a team."""
    description: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('description'), 'exclude': lambda f: f is None }})
    r"""The description of the team."""
    html_description: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('html_description'), 'exclude': lambda f: f is None }})
    r"""The description of the team with formatting as HTML."""
    name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('name'), 'exclude': lambda f: f is None }})
    r"""The name of the team."""
    organization: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('organization'), 'exclude': lambda f: f is None }})
    r"""The organization/workspace the team belongs to. This must be the same organization you are in and cannot be changed once set."""
    visibility: Optional[TeamRequestVisibility] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('visibility'), 'exclude': lambda f: f is None }})
    r"""The visibility of the team to users in the same organization"""
    


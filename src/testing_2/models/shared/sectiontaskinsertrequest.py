"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from testing_2 import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)

@dataclasses.dataclass
class SectionTaskInsertRequest:
    task: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('task') }})
    r"""The task to add to this section."""
    insert_after: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('insert_after'), 'exclude': lambda f: f is None }})
    r"""An existing task within this section after which the added task should be inserted. Cannot be provided together with insert_before."""
    insert_before: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('insert_before'), 'exclude': lambda f: f is None }})
    r"""An existing task within this section before which the added task should be inserted. Cannot be provided together with insert_after."""
    

